{
  "summary": [
    {
      "summary": "We are a US company that sells quality freeze dried food for long term storage. Our products are packaged in strong bags with oxygen absorbers and have a shelf life of 25 years. They are nutrient dense and can be reconstituted with water. Our freeze dried foods are lightweight and compact, making them perfect for camping and hiking trips. We support local ranchers and source our protein from them. We prioritize customer privacy and delete order and address information after 30 days.",
      "summaryeli15": "We are a US company that sells long-lasting food. The food is sealed in strong bags and can last for 25 years if stored correctly. It is packed with lots of nutrients to keep you healthy. Just add water to make a meal. The food is lightweight, so it's great for camping and hiking. We get our meat from local farmers who treat the animals well. We delete your order information after 30 days for privacy and security.",
      "title": "MOA - Premium Freeze Dried Food",
      "link": "https://freedomfoods.store/"
    },
    {
      "summary": "This pull request proposes the implementation of OP_CHECKTEMPLATEVERIFY, OP_CHECKSIGFROMSTACK(VERIFY), and OP_INTERNALKEY. It does not propose any activation parameters for testnet or mainnet. These changes enable the implementation of various layer two proposals, including Lightning Symmetry, Point-Time-Locked Contracts, Timeout Trees, and unidirectional non-interactive channels. The author also has a branch with the same changes based on the latest release. The pull request includes sections that might be updated with relevant metadata for reviewers and maintainers. Code coverage information can be found in the test coverage report. There are conflicting pull requests, and reviewers are encouraged to start with the one that should be merged first. Some discussions suggest that certain aspects of the pull request should be discussed elsewhere. The author is interested in feedback regarding LN-Symmetry implementation. There are a few comments and suggestions from reviewers, and the pull request is still in the conceptual stage. The author mentions the usefulness of using the full Bitcoin Core CI for improving the proposal. The pull request references previous meetings and workshops related to CHECKTEMPLATEVERIFY, and the author suggests that similar sessions might not be necessary for CHECKSIGFROMSTACK and INTERNALKEY. The review process is ongoing and may require some adjustments before merging.",
      "summaryeli15": "\"We take your feedback seriously and encourage you to provide input. If you have any questions about this project, you can sign up for a free account and contact us. This pull request includes some changes to support new features and improvements. It also depends on other proposals that were recently made. We value code review and want to make sure the changes are thoroughly tested before merging. We appreciate your help in improving the project!\"",
      "title": "LNHANCE",
      "link": "https://github.com/bitcoin/bitcoin/pull/29198"
    },
    {
      "summary": "This article discusses the concept of covenants in Bitcoin using Taproot and a hypothetical CAT opcode. It explains that traditionally, CAT has been considered a covenant opcode only when used with CHECKSIGFROMSTACK. The article explores how to abuse the math of Schnorr signatures to emulate the functionality of CHECKSIGFROMSTACK. It highlights that open-ended predicates like \"any transaction whose outputs are less than 1 BTC\" cannot work due to a technical reason involving the transaction data. The article also mentions that Bitcoin today has a way to get the transaction hash onto the stack, but it is limited by the hash circularity problem. It explores the use of ECDSA and BIP340 signatures and their relationship with covenants. The article concludes by previewing upcoming posts that will discuss the use of auxiliary inputs, value-switching, ad-hoc extensions of Miniscript, and software development for these concepts.",
      "summaryeli15": "This article is the first in a series about Bitcoin covenants using Taproot and a hypothetical CAT opcode. It talks about how to use math tricks with Schnorr signatures to create covenants in Bitcoin. Currently, covenants are not possible because of a technical limitation, but if certain changes were made to Bitcoin, covenants could be implemented. The article also mentions some upcoming topics, including using auxiliary inputs for Lightning channels and constructing Vaults.",
      "title": "Andrew Poelstra Thesis",
      "link": "https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298"
    },
    {
      "summary": "V3 Transactions aim to address transaction pinning attacks on Lightning and L2/contracting protocols. These attacks involve malicious actors forcing users to pay more fees by replacing their transactions. V3 transactions introduce a rule to mitigate pinning, but it is not sufficient. Mallory, the attacker, takes advantage of this rule and broadcasts lower fee rate transactions, forcing Alice to pay more fees. Stable feerates make it difficult for Alice to avoid higher fees. Mallory can also target multiple users simultaneously, increasing his impact. Removing the rule for small transactions or restricting the size of V3 children makes the attack less effective. Overall, V3 transactions have limitations in preventing pinning attacks.",
      "summaryeli15": "V3 transactions are a set of rules for a type of transaction in Bitcoin called Lightning. The main goal of V3 transactions is to prevent an attack called \"transaction pinning\" where someone forces another person to spend more money on fees. Unfortunately, V3 transactions alone are not enough to stop this attack. If the attacker uses a lower fee rate, they can still force the person to spend more fees. The attack becomes more efficient if the attacker targets multiple people at once.",
      "title": "Pinning Attacks in V3 still possible - Peter Todd",
      "link": "https://petertodd.org/2023/v3-txs-pinning-vulnerability"
    },
    {
      "summary": "Btcd version v0.24.0 and below have bugs that do not follow the consensus rules outlined in BIP 68 and BIP 112. Users are advised to update to v0.24.0 or higher. These BIPs introduced relative time locks to Bitcoin transactions. The bugs can cause btcd nodes to reject blocks that Bitcoin Core nodes would accept, leading to a chain split. Chain splits can result in various issues. Negative version transactions are non-standard, but this would not be a problem for attackers. The discoverer of the bug was awarded a bug bounty. The patch to fix the bug looks like this for bitcoin-s. The bug was found through differential fuzzing, and the code will be published soon. The bug may have already been exploited on the testnet. Syncing a btcd v0.23.4 node on the testnet may not work, but v0.24.0 is fine. The mainnet btcd v0.23.3 node seems to be unaffected. There have been no reports of exploits on the mainnet.",
      "summaryeli15": "The old version of Btcd software has a problem that can lead to errors in how transactions are processed. This can cause a split in the Bitcoin network. Users are advised to update to the latest version of Btcd to fix this problem. Some people found this issue by testing the software in different ways and received a reward for their discovery.",
      "title": "YABTCDB - Signed Integer TX Versions",
      "link": "https://delvingbitcoin.org/t/disclosure-btcd-consensus-bugs-due-to-usage-of-signed-transaction-version/455"
    },
    {
      "summary": "Phoenix is a mobile wallet for Bitcoin that allows users to store and manage their own funds securely. It utilizes the Lightning Network to facilitate fast and low-cost payments. The wallet is accessible on both Android and iOS platforms. \n\nRecently, the iOS version v2.0.8 of Phoenix was released, bringing along several important fixes. While the specific details of these fixes are not provided, they are aimed at improving the overall performance and functionality of the wallet. These updates are likely to enhance the user experience by addressing any bugs or issues that were present in the previous version. \n\nOverall, Phoenix offers a convenient and user-friendly solution for Bitcoin enthusiasts to securely send and receive payments using the Lightning Network.",
      "summaryeli15": "Phoenix is like a special wallet for your Bitcoin that you have on your phone. It uses a cool trick called Lightning to easily send and receive payments. It works on both Android and Apple phones. The new iOS version, called v2.0.8, also fixed some problems to make it work even better.",
      "title": "Phoenix Wallet v2.1.0",
      "link": "https://www.nobsbitcoin.com/phoenix-wallet-ios-v2-1-0/"
    },
    {
      "summary": "This article is a discussion about changing the default setting of the `-permitbaremultisig` configuration option in Bitcoin Core. Currently, non-P2SH multisig transactions are relayed by default, but some developers are proposing to change the default setting to make these transactions non-standard and not relayed by default. The proponents argue that this change will help reduce spam and maintain the health of the network. On the other hand, some developers are skeptical about the effectiveness of this change in reducing spam and believe that it could have negative consequences, such as the emergence of alternative transaction relay mechanisms. The discussion also mentions the need to convince mining pools to adopt these changes. Overall, the article explores different perspectives on the proposed change and its potential impact on the Bitcoin network.",
      "summaryeli15": "The first article is about how the author takes feedback very seriously and encourages readers to sign up for an account to ask questions and open issues.\n\nThe second article discusses a proposed change in the Bitcoin network that would prevent certain types of transactions, known as non-P2SH multisig transactions, from being relayed. The goal of this change is to reduce unwanted activities and maintain a healthy decentralization of the network. It is also explained that this change only affects the way transactions are relayed, not how they are recorded on the blockchain.\n\nThe third article includes various sections related to the review and maintenance of the project, such as metadata for reviewers, information on test coverage, and guidelines for the review process. It also mentions that if a review is listed incorrectly, users can react to the comment with a thumbs down emoji to ignore it in the next update.\n\nThe rest of the articles are comments from different users discussing their opinions on the proposed change and its potential impact on spam, data storage, and the role of miners in the network. Some users support the change, while others have concerns about censorship and the effectiveness of the proposed solution.",
      "title": "P2MS (PERMIT_BAREMULTISIG) discussion lockd",
      "link": "https://github.com/bitcoin/bitcoin/pull/28217"
    },
    {
      "summary": "We value your feedback and consider it important when making decisions. Our team carefully reviews every piece of feedback submitted by users. We take the input seriously and use it to inform our actions and improvements. If you would like to learn more about the different options and criteria we offer, refer to the documentation provided. It contains additional details and explanations regarding the available qualifiers.",
      "summaryeli15": "The company listens to all the feedback they receive from customers and they take it very seriously. They have a document with more information about all the different things they consider when looking at feedback.",
      "title": "Payjoin Client for Bitcoin Core released",
      "link": "https://github.com/payjoin/rust-payjoin/tree/master/payjoin-cli"
    },
    {
      "summary": "Feedback is valued and taken seriously. Qualifiers can be found in the documentation. To verify the release, install gpg or gpg2. Import the keys that signed the release. Verify the release using the PGP key and the manifest files. If the verification is successful, the main manifest page's signature is verified, ensuring the integrity and authenticity of the downloaded binaries. Depending on the operating system, recalculate the sha256 sum of the binary and compare it with the provided hashes. Use the shasum -a 256 tool to compute the sha256 hash. The produced hash should match the listed hashes. To verify, use the gpg command to receive and verify the manifest signature. A good signature from \"Zeus LN\" should be seen when verifying. Finally, view the contents of the manifest file.",
      "summaryeli15": "We take your feedback seriously and want to make sure our updates are safe. To check the release, you need to have a program called gpg or gpg2 installed. Once you have that, you can use someone's PGP key to verify the release. After that, you need to do some calculations to make sure the downloaded files are trustworthy. We provide some codes for you to check.",
      "title": "Zeus 0.8 Released",
      "link": "https://github.com/ZeusLN/zeus/releases/tag/v0.8.0"
    },
    {
      "summary": "The key challenge in scaling Lightning is creating Lightning channels for casual users. Signature-based factories have limitations in creating a large number of channels. Simple covenants, enabled by CheckTemplateVerify (CTV) or AnyPrevOut (APO), can allow a single on-chain unspent transaction output (UTXO) to create channels for millions of casual users. These covenant-based protocols support resizing channels off-chain, provide in-bound liquidity to casual users, charge penalties for putting an old state on-chain, and allow casual user monitoring without a watchtower service. Adding CTV and/or APO to Bitcoin's consensus rules would greatly enhance Lightning's scalability. The scalability problem lies in providing Lightning channels to casual users, where existing protocols are not sufficient. The use of covenants and timeout-trees can overcome this scalability limitation by allowing a large number of casual users to co-own Lightning channels without signature coordination. These protocols also address usability needs and allow casual users to perform Lightning payments and resize channels off-chain. The protocols rely on timeout-trees, passive rollovers, off-chain Bitcoin, and control UTXOs to improve scalability, capital efficiency, and usability. The protocols can be performed entirely off-chain, providing high scalability for Lightning channels. However, there are limitations and assumptions that need to be considered for these protocols. The hope is that adding simple covenants to Bitcoin's consensus rules will make Lightning a widely-used means of payment.",
      "summaryeli15": "The article explains that scaling the Lightning Network, which allows fast and cheap Bitcoin transactions, is a challenge. The current method of creating Lightning channels doesn't work well for large-scale adoption by casual users. The article proposes using covenants, which are rules that allow for the creation of Lightning channels for many casual users. Implementing covenants would greatly improve Lightning's scalability and usability, making it a widely-used payment method. The article provides technical details and assumptions for achieving this scalability.",
      "title": "Mailing List - Scaling Lightning with Simple Covenants",
      "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021941.html"
    },
    {
      "summary": "This website is asking the user to confirm that they are not a robot by clicking on a box. The user’s browser needs to support JavaScript and cookies, and the user should not be blocking them. For more details, the user can check the website’s Terms of Service and Cookie Policy. If there are any questions or issues regarding this message, the user can contact the website’s support team and provide the reference ID mentioned below.",
      "summaryeli15": "Sometimes when you visit a website, it wants to make sure you're a real person and not a robot. So it might ask you to click a box saying you're not a robot. It also needs your browser to support JavaScript and cookies, which help the website work properly. If you have any problems, you can contact the website's support team.",
      "title": "ETF approval did not pump thy bags",
      "link": "https://www.bloomberg.com/news/articles/2024-01-22/bitcoin-slips-back-toward-40-000-as-etf-hype-simmers"
    }
  ]
}